drop table if exists t1;
drop table if exists t2;
select 0=0,1>0,1>=1,1<0,1<=0,1!=0;
0 = 0	1 > 0	1 >= 1	1 < 0	1 <= 0	1 != 0
1	1	1	0	0	1
select "a"<"b","a"<="b","b">="a","b">"a","a"="A","a"<>"b";
'a' < 'b'	'a' <= 'b'	'b' >= 'a'	'b' > 'a'	'a' = 'A'	'a' != 'b'
1	1	1	1	0	1
select "a "="A", "A "="a", "a  " <= "A b";
'a ' = 'A'	'A ' = 'a'	'a  ' <= 'A b'
0	0	0
select "abc" like "a%", "abc" not like "%d%", "a%" like "a\%","abc%" like "a%\%","abcd" like "a%b_%d", "a" like "%%a","abcde" like "a%_e","abc" like "abc%";
'abc' LIKE 'a%'	NOT 'abc' LIKE '%d%'	'a%' LIKE 'a\%'	'abc%' LIKE 'a%\%'	'abcd' LIKE 'a%b_%d'	'a' LIKE '%%a'	'abcde' LIKE 'a%_e'	'abc' LIKE 'abc%'
1	1	1	1	1	1	1	1
select "a" like "%%b","a" like "%%ab","ab" like "a\%", "ab" like "_", "ab" like "ab_", "abc" like "%_d", "abc" like "abc%d";
'a' LIKE '%%b'	'a' LIKE '%%ab'	'ab' LIKE 'a\%'	'ab' LIKE '_'	'ab' LIKE 'ab_'	'abc' LIKE '%_d'	'abc' LIKE 'abc%d'
0	0	0	0	0	0	0
select 'abc' like '%c','abcabc' like '%c',  "ab" like "", "ab" like "a", "ab" like "ab";
'abc' LIKE '%c'	'abcabc' LIKE '%c'	'ab' LIKE ''	'ab' LIKE 'a'	'ab' LIKE 'ab'
1	1	0	0	1
select "Det h채r 채r svenska" regexp "h[[:alpha:]]+r", "aba" regexp "^(a|b)*$";
'Det h채r 채r svenska' REGEXP 'h[[:alpha:]]+r'	'aba' REGEXP '^(a|b)*$'
0	1
select "aba" regexp concat("^","a");
'aba' REGEXP concat('^', 'a')
1
select 2 between 1 and 3, "monty" between "max" and "my",2=2 and "monty" between "max" and "my" and 3=3;
2 BETWEEN 1 AND 3	'monty' BETWEEN 'max' AND 'my'	2 = 2 AND 'monty' BETWEEN 'max' AND 'my' AND 3 = 3
1	1	1
select 'b' between 'a' and 'c', 'B' between 'a' and 'c';
'b' BETWEEN 'a' AND 'c'	'B' BETWEEN 'a' AND 'c'
1	0
select 2 in (3,2,5,9,5,1),"monty" in ("david","monty","allan"), 1.2 in (1.4,1.2,1.0);
2 IN (3, 2, 5, 9, 5, 1)	'monty' IN ('david', 'monty', 'allan')	1.2 IN (1.4, 1.2, 1.0)
1	1	1
select 3 ^ 11, 1 ^ 1, 1 ^ 0, 1 ^ NULL, NULL ^ 1;
3 ^ 11	1 ^ 1	1 ^ 0	1 ^ NULL	NULL ^ 1
8	0	1	NULL	NULL
explain select 3 ^ 11, 1 ^ 1, 1 ^ 0, 1 ^ NULL, NULL ^ 1;
Explain String
PLAN FRAGMENT 0
  OUTPUT EXPRS:
    <slot 0> 3 ^ 11
     1 ^ 1
    <slot 2> 1 ^ 0
    <slot 3> NULL
    <slot 4> NULL
  PARTITION: UNPARTITIONED

  VRESULT SINK

  0:VUNION
     constant exprs: 
         3 ^ 11 | 1 ^ 1 | 1 ^ 0 | NULL | NULL
select 18446744073709551615, 18446744073709551615 DIV 1, 18446744073709551615 DIV 2;
18446744073709551615	18446744073709551615 DIV 1	18446744073709551615 DIV 2
18446744073709551615	18446744073709551615	9223372036854775807
create table t1 (a int)
DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
insert into t1 values (1);
analyze table t1;
Catalog_Name	DB_Name	Table_Name	Columns	Job_Id
internal	default_cluster:test	t1	[a]	171707
select - a from t1;
-1 * `a`
-1
explain select - a from t1;
Explain String
PLAN FRAGMENT 0
  OUTPUT EXPRS:
    -1 * `a`
  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t1`.`a`

  VRESULT SINK

  0:VOlapScanNode
     TABLE: default_cluster:test.t1(t1), PREAGGREGATION: ON
     partitions=1/1, tablets=1/1, tabletList=171704
     cardinality=0, avgRowSize=4.0, numNodes=1
drop table t1;
select 5 between 0 and 10 between 0 and 1,(5 between 0 and 10) between 0 and 1;
5 BETWEEN 0 AND 10 BETWEEN 0 AND 1	(5 BETWEEN 0 AND 10) BETWEEN 0 AND 1
0	1
CREATE TABLE t1 (d varchar(6), k int)
DISTRIBUTED BY HASH(d) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 VALUES (NULL, 2);
SELECT GREATEST(d,d) FROM t1 WHERE k=2;
greatest(`d`, `d`)
NULL
DROP TABLE t1;
select (12%0) <=> null      as '1';
1
1
select (12%0) is null       as '1';
1
1
select 12%0                 as 'NULL';
NULL
NULL
select 12%2                 as '0';
0
0
select 12%NULL              as 'NULL';
NULL
NULL
select 12 % null            as 'NULL';
NULL
NULL
select null % 12            as 'NULL';
NULL
NULL
select null % 0             as 'NULL';
NULL
NULL
select 0 % null             as 'NULL';
NULL
NULL
select mod(12.0, 0)         as 'NULL';
NULL
NULL
select mod(12, 0.0)         as 'NULL';
NULL
NULL
select mod(12, NULL)        as 'NULL';
NULL
NULL
select mod(12.0, NULL)      as 'NULL';
NULL
NULL
select mod(NULL, 2)         as 'NULL';
NULL
NULL
select mod(NULL, 2.0)       as 'NULL';
NULL
NULL
create table t1 (a int, b int)
DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
insert into t1 values (1,2), (2,3), (3,4), (4,5);
select * from t1 where a not between 1 and 2;
a	b
3	4
4	5
select * from t1 where a not between 1 and 2 and b not between 3 and 4;
a	b
4	5
drop table t1;
#
# Bug#22523685 FUNCTION GREATEST AND LEAST WORKS INCORRECTLY
#              WITH BIGINT UNSIGNED VALUE
#
SELECT greatest( 9223372036854775807 , 9223372036854775808 ) as g;
g
9223372036854775808
SELECT least   ( 9223372036854775807 , 9223372036854775808 ) as l;
l
9223372036854775807
SELECT greatest (9223372036854775808, -1, 18446744073709551615 ) as g;
g
18446744073709551615
SELECT least    (9223372036854775808, -1, 18446744073709551615 ) as l;
l
-1
SELECT greatest (9223372036854775808, 18446744073709551615) as g;
g
18446744073709551615
SELECT least    (9223372036854775808, 18446744073709551615) as l;
l
9223372036854775808
SELECT GREATEST('11', '5', '2');
greatest('11', '5', '2')
5
SELECT GREATEST('11', 5, 2);
greatest('11', '5', '2')
5
SELECT GREATEST(11, 5, 2);
greatest(11, 5, 2)
11
SELECT LEAST('11', '5', '2');
least('11', '5', '2')
11
SELECT LEAST('11', 5, 2);
least('11', '5', '2')
11
SELECT LEAST(11, 5, 2);
least(11, 5, 2)
2
SELECT GREATEST(date '2005-05-05', 20010101, 20040404, 20030303);
greatest(CAST('2005-05-05' AS DATE), 20010101, 20040404, 20030303)
20050505
SELECT LEAST(date '2005-05-05', 20030303, 20010101, 20040404);
least(CAST('2005-05-05' AS DATE), 20030303, 20010101, 20040404)
20010101
SELECT GREATEST(date '2005-05-05', '20010101', '20040404', '20030303');
greatest(CAST('2005-05-05' AS DATE), '20010101', '20040404', '20030303')
2005-05-05
SELECT GREATEST('95-05-05', date '10-10-10');
greatest('95-05-05', CAST('10-10-10' AS DATE))
95-05-05
SELECT GREATEST(date '1995-05-05', '10-10-10');
greatest(CAST('1995-05-05' AS DATE), '10-10-10')
1995-05-05
SELECT GREATEST('11', '5', '2') + 0;
greatest('11', '5', '2') + 0
5
SELECT GREATEST('11', 5, 2) + 0;
greatest('11', '5', '2') + 0
5
SELECT GREATEST(11, 5, 2) + 0;
greatest(11, 5, 2) + 0
11
SELECT GREATEST(date '2005-05-05', 20010101, 20040404, 20030303) + 0;
greatest(CAST('2005-05-05' AS DATE), 20010101, 20040404, 20030303) + 0
20050505
SELECT GREATEST('95-05-05', date '10-10-10') + 0;
greatest('95-05-05', CAST('10-10-10' AS DATE)) + 0
NULL
SELECT GREATEST(date '1995-05-05', '10-10-10') + 0;
greatest(CAST('1995-05-05' AS DATE), '10-10-10') + 0
NULL
SELECT GREATEST('11', '5', '2') + 0.00;
greatest('11', '5', '2') + 0
5
SELECT GREATEST('11', 5, 2) + 0.00;
greatest('11', '5', '2') + 0
5
SELECT GREATEST(11, 5, 2) + 0.00;
greatest(11, 5, 2) + 0.00
11.00
SELECT GREATEST(date '1995-05-05', 19910101, 20050505, 19930303) + 0.00;
greatest(CAST('1995-05-05' AS DATE), 19910101, 20050505, 19930303) + 0.00
20050505.00
SELECT GREATEST('95-05-05', date '10-10-10') + 0.00;
greatest('95-05-05', CAST('10-10-10' AS DATE)) + 0
NULL
SELECT GREATEST(date '1995-05-05', '10-10-10') + 0.00;
greatest(CAST('1995-05-05' AS DATE), '10-10-10') + 0
NULL
# End of test for Bug#25123839
#
# Bug#13364839: GREATEST() DOES NOT ALWAYS RETURN SAME SIGNNESS OF ARGUMENT TYPES
#
CREATE TABLE t1 (a INT, b LARGEINT)
UNIQUE KEY(a)
DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 VALUES (1, 13836376518955650385);
SELECT * FROM t1;
a	b
1	13836376518955650385
DROP TABLE t1;
#
# Bug#29467577 ASSERTION `!UNSIGNED_FLAG ||
#              (UNSIGNED_FLAG && ARGS[I]->UNSIGNED_FLAG)' FAILED.
#
CREATE TABLE t1 (c1 BIGINT, c2 BIGINT)
DISTRIBUTED BY HASH(c1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 VALUES (202, 1);
SELECT * FROM t1 WHERE (GREATEST(c1, c2) = 42) AND (c2 = 1);
c1	c2
DROP TABLE t1;
#
#Bug 33758255 - An edge case for base BUG 32038406 -
#               FILESORT USED FOR ORDER BY ...DESC EVEN WHEN
#               DESCENDING INDEX AVAILABLE AND USED
#
CREATE TABLE t1 (
c1 VARCHAR(10),
c2 VARCHAR(10),
c3 DATE NOT NULL,
c4 INT)
UNIQUE KEY(c1, c2, c3)
DISTRIBUTED BY HASH(c1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
EXPLAIN
SELECT c1 FROM t1
WHERE c1= 'abc' AND
c2 IN ('def') AND
c3 BETWEEN '2022-03-16' AND '2022-03-16'
ORDER BY c3 DESC;
Explain String
PLAN FRAGMENT 0
  OUTPUT EXPRS:
    <slot 4> `c1`
  PARTITION: UNPARTITIONED

  VRESULT SINK

  2:VMERGING-EXCHANGE
     offset: 0
     limit: 9223372036854775807

PLAN FRAGMENT 1

  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t1`.`c1`

  STREAM DATA SINK
    EXCHANGE ID: 02
    UNPARTITIONED

  1:VTOP-N
  |  order by: <slot 3> `c3` DESC
  |  offset: 0
  |  limit: 9223372036854775807
  |  
  0:VOlapScanNode
     TABLE: default_cluster:test.t1(t1), PREAGGREGATION: OFF. Reason: No AggregateInfo
     PREDICATES: `c1` = 'abc' AND `c2` IN ('def') AND `c3` >= '2022-03-16' AND `c3` <= '2022-03-16' AND `default_cluster:test`.`t1`.`__DORIS_DELETE_SIGN__` = 0
     partitions=0/1, tablets=0/0, tabletList=
     cardinality=0, avgRowSize=37.0, numNodes=1
DROP TABLE t1;
