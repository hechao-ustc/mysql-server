drop table if exists t1;
drop table if exists t2;
drop table if exists t3;
drop table if exists t4;
drop table if exists t5;
drop table if exists t6;
CREATE TABLE t1 (S1 INT)
DISTRIBUTED BY HASH(S1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
CREATE TABLE t2 (S1 INT)
DISTRIBUTED BY HASH(S1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
SELECT * FROM t1 JOIN t2;
S1	S1
1	2
SELECT * FROM t1 INNER JOIN t2;
S1	S1
1	2
SELECT * from t1 JOIN t2 USING (S1);
S1	S1
SELECT * FROM t1 INNER JOIN t2 USING (S1);
S1	S1
SELECT * from t1 CROSS JOIN t2;
S1	S1
1	2
SELECT * from t1 LEFT JOIN t2 USING(S1);
S1	S1
1	NULL
SELECT * from t1 LEFT JOIN t2 ON(t2.S1=2);
S1	S1
1	2
SELECT * from t1 RIGHT JOIN t2 USING(S1);
S1	S1
NULL	2
SELECT * from t1 RIGHT JOIN t2 ON(t1.S1=1);
S1	S1
1	2
drop table t1;
drop table t2;
create table t1 (id int)
UNIQUE KEY(id)
DISTRIBUTED BY HASH(id) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
create table t2 (id int)
DISTRIBUTED BY HASH(id) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
insert into t1 values (75);
insert into t1 values (79);
insert into t1 values (78);
insert into t1 values (77);
insert into t1 values (76);
insert into t1 values (76);
insert into t1 values (104);
insert into t1 values (103);
insert into t1 values (102);
insert into t1 values (101);
insert into t1 values (105);
insert into t1 values (106);
insert into t1 values (107);
insert into t2 values (107),(75),(1000);
select t1.id, t2.id from t1, t2 where t2.id = t1.id;
id	id
107	107
75	75
select t1.id, count(t2.id) from t1,t2 where t2.id = t1.id group by t1.id;
id	count(`t2`.`id`)
107	1
75	1
select t1.id,t2.id from t2 left join t1 on t1.id>=74 and t1.id<=0 where t2.id=75 and t1.id is null;
id	id
NULL	75
explain select t1.id,t2.id from t2 left join t1 on t1.id>=74 and t1.id<=0 where t2.id=75 and t1.id is null;
Explain String
PLAN FRAGMENT 0
  OUTPUT EXPRS:
    <slot 4>
    <slot 3>
  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t2`.`id`

  VRESULT SINK

  2:VNESTED LOOP JOIN
  |  join op: LEFT OUTER JOIN()
  |  predicates: <slot 7> IS NULL
  |  is output left side only: false
  |  cardinality=0
  |  vec output tuple id: 2
  |  vIntermediate tuple ids: 3 4 
  |  output slot ids: 3 4 
  |  
  |----3:VEXCHANGE
  |       offset: 0
  |    
  0:VOlapScanNode
     TABLE: default_cluster:test.t2(t2), PREAGGREGATION: ON
     PREDICATES: `t2`.`id` = 75
     partitions=1/1, tablets=1/1, tabletList=163765
     cardinality=0, avgRowSize=4.0, numNodes=1

PLAN FRAGMENT 1

  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t1`.`id`

  STREAM DATA SINK
    EXCHANGE ID: 03
    UNPARTITIONED

  1:VOlapScanNode
     TABLE: default_cluster:test.t1(t1), PREAGGREGATION: ON
     PREDICATES: `t1`.`id` >= 74 AND `t1`.`id` <= 0 AND `default_cluster:test`.`t1`.`__DORIS_DELETE_SIGN__` = 0
     partitions=1/1, tablets=1/1, tabletList=163760
     cardinality=0, avgRowSize=5.0, numNodes=1
explain select t1.id, t2.id from t1, t2 where t2.id = t1.id and t1.id <0 and t1.id > 0;
Explain String
PLAN FRAGMENT 0
  OUTPUT EXPRS:
    <slot 3>
    <slot 5>
  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t1`.`id`

  VRESULT SINK

  2:VHASH JOIN
  |  join op: INNER JOIN(BUCKET_SHUFFLE)[Tables are not in the same group]
  |  equal join conjunct: `t1`.`id` = `t2`.`id`
  |  runtime filters: RF000[in_or_bloom] <- `t2`.`id`(-1/0/2097152)
  |  cardinality=0
  |  vec output tuple id: 2
  |  vIntermediate tuple ids: 3 4 
  |  output slot ids: 3 5 
  |  hash output slot ids: 0 1 
  |  
  |----3:VEXCHANGE
  |       offset: 0
  |    
  0:VOlapScanNode
     TABLE: default_cluster:test.t1(t1), PREAGGREGATION: ON
     PREDICATES: `t1`.`id` < 0 AND `t1`.`id` > 0 AND `default_cluster:test`.`t1`.`__DORIS_DELETE_SIGN__` = 0
     runtime filters: RF000[in_or_bloom] -> `t1`.`id`
     partitions=1/1, tablets=1/1, tabletList=163760
     cardinality=0, avgRowSize=5.0, numNodes=1

PLAN FRAGMENT 1

  PARTITION: HASH_PARTITIONED: `default_cluster:test`.`t2`.`id`

  STREAM DATA SINK
    EXCHANGE ID: 03
    BUCKET_SHFFULE_HASH_PARTITIONED: `t2`.`id`

  1:VOlapScanNode
     TABLE: default_cluster:test.t2(t2), PREAGGREGATION: ON
     PREDICATES: `t2`.`id` < 0 AND `t2`.`id` > 0
     partitions=1/1, tablets=1/1, tabletList=163765
     cardinality=0, avgRowSize=4.0, numNodes=1
drop table t1;
drop table t2;
CREATE TABLE t1 (d DATE NOT NULL)
DISTRIBUTED BY HASH(d) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
CREATE TABLE t2 (d DATE NOT NULL)
DISTRIBUTED BY HASH(d) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 (d) VALUES ('2001-08-01'),('1000-01-01');
SELECT * FROM t1 LEFT JOIN t2 USING (d) WHERE t2.d IS NULL;
d	d
1000-01-01	NULL
2001-08-01	NULL
SELECT * from t1 WHERE t1.d IS NULL;
d
SELECT * FROM t1 WHERE 1/0 IS NULL;
d
1000-01-01
2001-08-01
DROP TABLE t1;
DROP TABLE t2;
CREATE TABLE t1 (
Document_ID varchar(50) NOT NULL default '',
Contractor_ID varchar(6) NOT NULL default '',
Language_ID char(3) NOT NULL default '',
Expiration_Date datetime default NULL,
Publishing_Date datetime default NULL,
Title text,
Column_ID varchar(50) NOT NULL default ''
)
UNIQUE KEY(Document_ID,Contractor_ID,Language_ID)
DISTRIBUTED BY HASH(Document_ID) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t1 VALUES ('xep80','1','ger','2001-12-31 20:00:00','2001-11-12 10:58:00','Kartenbestellung - jetzt auch online','anle'),('','999998','',NULL,NULL,NULL,'');
CREATE TABLE t2 (
Contractor_ID char(6) NOT NULL default '',
Language_ID char(3) NOT NULL default '',
Document_ID char(50) NOT NULL default '',
CanRead char(1) default NULL,
Customer_ID int(11) NOT NULL default '0'
)
UNIQUE KEY(Contractor_ID,Language_ID,Document_ID)
DISTRIBUTED BY HASH(Contractor_ID) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t2 VALUES ('5','ger','xep80','1',999999),('1','ger','xep80','1',999999);
CREATE TABLE t3 (
Language_ID char(3) NOT NULL default '',
Column_ID char(50) NOT NULL default '',
Contractor_ID char(6) NOT NULL default '',
CanRead char(1) default NULL,
Active char(1) default NULL
)
UNIQUE KEY(Language_ID,Column_ID,Contractor_ID)
DISTRIBUTED BY HASH(Language_ID) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
INSERT INTO t3 VALUES ('ger','home','1','1','1'),('ger','Test','1','0','0'),('ger','derclu','1','0','0'),('ger','clubne','1','0','0'),('ger','philos','1','0','0'),('ger','clubko','1','0','0'),('ger','clubim','1','1','1'),('ger','progra','1','0','0'),('ger','progvo','1','0','0'),('ger','progsp','1','0','0'),('ger','progau','1','0','0'),('ger','progku','1','0','0'),('ger','progss','1','0','0'),('ger','nachl','1','0','0'),('ger','mitgli','1','0','0'),('ger','mitsu','1','0','0'),('ger','mitbus','1','0','0'),('ger','ergmar','1','1','1'),('ger','home','4','1','1'),('ger','derclu','4','1','1'),('ger','clubne','4','0','0'),('ger','philos','4','1','1'),('ger','clubko','4','1','1'),('ger','clubim','4','1','1'),('ger','progra','4','1','1'),('ger','progvo','4','1','1'),('ger','progsp','4','1','1'),('ger','progau','4','0','0'),('ger','progku','4','1','1'),('ger','progss','4','1','1'),('ger','nachl','4','1','1'),('ger','mitgli','4','0','0'),('ger','mitsu','4','0','0'),('ger','mitbus','4','0','0'),('ger','ergmar','4','1','1'),('ger','progra2','1','0','0'),('ger','archiv','4','1','1'),('ger','anmeld','4','1','1'),('ger','thema','4','1','1'),('ger','edito','4','1','1'),('ger','madis','4','1','1'),('ger','enma','4','1','1'),('ger','madis','1','1','1'),('ger','enma','1','1','1'),('ger','vorsch','4','0','0'),('ger','veranst','4','0','0'),('ger','anle','4','1','1'),('ger','redak','4','1','1'),('ger','nele','4','1','1'),('ger','aukt','4','1','1'),('ger','callcenter','4','1','1'),('ger','anle','1','0','0');
delete from t1 where Contractor_ID='999998';
insert into t1 (Contractor_ID) Values ('999998');
SELECT DISTINCT COUNT(t1.Title) FROM t1,
t2, t3 WHERE 
t1.Document_ID='xep80' AND t1.Contractor_ID='1' AND 
t1.Language_ID='ger' AND '2001-12-21 23:14:24' >= 
Publishing_Date AND '2001-12-21 23:14:24' <= Expiration_Date AND 
t1.Document_ID = t2.Document_ID AND 
t1.Language_ID = t2.Language_ID AND 
t1.Contractor_ID = t2.Contractor_ID AND ( 
t2.Customer_ID = '4'  OR 
t2.Customer_ID = '999999'  OR 
t2.Customer_ID = '1' )AND t2.CanRead 
= '1'  AND t1.Column_ID=t3.Column_ID AND 
t1.Language_ID=t3.Language_ID AND ( 
t3.Contractor_ID = '4'  OR 
t3.Contractor_ID = '999999'  OR 
t3.Contractor_ID = '1') AND 
t3.CanRead='1' AND t3.Active='1';
count(`t1`.`Title`)
1
SELECT DISTINCT COUNT(t1.Title) FROM t1,
t2, t3 WHERE 
t1.Document_ID='xep80' AND t1.Contractor_ID='1' AND 
t1.Language_ID='ger' AND '2001-12-21 23:14:24' >= 
Publishing_Date AND '2001-12-21 23:14:24' <= Expiration_Date AND 
t1.Document_ID = t2.Document_ID AND 
t1.Language_ID = t2.Language_ID AND 
t1.Contractor_ID = t2.Contractor_ID AND ( 
t2.Customer_ID = '4'  OR 
t2.Customer_ID = '999999'  OR 
t2.Customer_ID = '1' )AND t2.CanRead 
= '1'  AND t1.Column_ID=t3.Column_ID AND 
t1.Language_ID=t3.Language_ID AND ( 
t3.Contractor_ID = '4'  OR 
t3.Contractor_ID = '999999'  OR 
t3.Contractor_ID = '1') AND 
t3.CanRead='1' AND t3.Active='1';
count(`t1`.`Title`)
1
drop table t1;
drop table t2;
drop table t3;
create table t1 (a1 int, a2 int)
DISTRIBUTED BY HASH(a1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
create table t2 (a1 int, b int)
DISTRIBUTED BY HASH(a1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
create table t3 (c1 int, c2 int)
DISTRIBUTED BY HASH(c1) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
create table t4 (c2 int)
DISTRIBUTED BY HASH(c2) BUCKETS 1
PROPERTIES (
"replication_num" = "1"
);
insert into t1 values (1,1);
insert into t2 values (1,1);
insert into t3 values (1,1);
insert into t4 values (1);
select * from t1 join t2 using (a1) join t3 on b=c1 join t4 using (c2);
a1	a2	a1	b	c1	c2	c2
1	1	1	1	1	1	1
select a2 from t1 join t2 using (a1) join t3 on b=c1 join t4 using (c2);
a2
1
drop table t1;
drop table t2;
drop table t3;
drop table t4;
