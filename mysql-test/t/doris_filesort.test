--source include/elide_costs.inc

DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;

--echo #
--echo # Bug#24709595 WL#8741: ASSERTION `SORTORDER->NEED_STRXNFRM == 0' FAILED
--echo #

CREATE TABLE t1(
  c VARCHAR(10)  DEFAULT NULL
)DISTRIBUTED BY HASH(c) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
CREATE TABLE t2(
  c1 VARCHAR(255) DEFAULT NULL,
  c2 VARCHAR(10)  DEFAULT NULL
)DISTRIBUTED BY HASH(c1) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);

INSERT INTO t1 VALUES('x');
INSERT INTO t2 VALUES('g','if'), ('not','ojgygqcgqi');

SELECT * FROM t2 WHERE (c2) <> (SELECT MAX(c) FROM t1 GROUP BY c);

DROP TABLE t1;
DROP TABLE t2;

--echo #
--echo # Bug#29660945: SIG 6 AT TEMPTABLE::HANDLER::POSITION | SRC/HANDLER.CC
--echo #

# SET optimizer_switch='block_nested_loop=off';

CREATE TABLE t1 (
  f1 varchar(255),
  f2 varchar(255)
)DISTRIBUTED BY HASH(f1) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);

INSERT INTO t1 VALUES (NULL,'A');
INSERT INTO t1 VALUES ('A',NULL);

SELECT * FROM t1 AS alias1 JOIN t1 AS alias2 ON alias1.f1=alias2.f2 ORDER BY alias2.f1 LIMIT 50;

DROP TABLE t1;

# SET optimizer_switch=DEFAULT;

--echo #
--echo # Bug #30687020: ORDER BY DOES NOT WORK FOR A COLUMN WITH A STRING FUNCTION AND UTF8MB4_0900_AI_C
--echo #

CREATE TABLE t1 ( f1 VARCHAR(100) ) DISTRIBUTED BY HASH(f1) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
INSERT INTO t1 VALUES (''), (NULL), (''), (NULL);
SELECT CONCAT(f1, '') AS dummy FROM t1 ORDER BY dummy;
DROP TABLE t1;

--echo #
--echo # Bug #30791074: WEIGHT_STRING: ASSERTION `0' FAILED. IN TIME_ZONE_UTC::TIME_TO_GMT_SEC
--echo #

CREATE TABLE t1 ( f1 INTEGER ) DISTRIBUTED BY HASH(f1) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
INSERT INTO t1 VALUES (0), (1), (101);
SELECT * FROM t1 ORDER BY UNIX_TIMESTAMP(f1);
DROP TABLE t1;

--echo #
--echo # Bug #31397840: Wrong result of SELECT DISTINCT JSON_ARRAYAGG
--echo #

SET sql_mode='';
CREATE TABLE t1
  (
     id            INT,
     char_field    CHAR(10)
  ) UNIQUE KEY(`id`)
  DISTRIBUTED BY HASH(id) BUCKETS 1
  PROPERTIES (
      "replication_num" = "1"
  );
INSERT INTO t1 VALUES (580801, '580801');
INSERT INTO t1 VALUES (580901, '580901');
INSERT INTO t1 VALUES (581001, '581001');
INSERT INTO t1 VALUES (581101, '581101');

ANALYZE TABLE t1;

# In Doris, cannot combine SELECT DISTINCT with aggregate functions or GROUP BY
# let $query = SELECT DISTINCT JSON_ARRAY(char_field), JSON_ARRAY(2) FROM t1 GROUP BY id ORDER BY id;
# eval $query;
# --replace_regex $elide_metrics
# --skip_if_hypergraph  # Uses an index scan instead of a sort.
# eval EXPLAIN FORMAT=tree $query;

DROP TABLE t1;
SET sql_mode=DEFAULT;

--echo #
--echo # Bug #32169770: HYPERGRAPH: ASSERTION `M_PART_INFO->IS_PARTITION_USED(M_LAST_PART)' FAILED.
--echo #

# The LONGTEXT is to force a sort by row ID.
# The ... ON FALSE condition is to make sure the Read() call never
# hits the partitioned table, so that it isn't properly initialized
# when filesort wants row IDs.

CREATE TABLE t1 (a varchar(100)) DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
INSERT INTO t1 VALUES ('a');
CREATE TABLE t2 (a INTEGER) UNIQUE KEY(`a`) DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
SELECT 1 AS a FROM t1 LEFT JOIN t2 ON FALSE GROUP BY a;
DROP TABLE t1;
DROP TABLE t2;

--echo #
--echo # Bug #32685064: ASSERTION `M_INDEX_CURSOR.IS_POSITIONED()' FAILED WITH HYPERGRAPH
--echo #

CREATE TABLE t1 (a varchar(100)) DISTRIBUTED BY HASH(a) BUCKETS 1
PROPERTIES (
    "replication_num" = "1"
);
INSERT INTO t1 VALUES ('8');
SELECT 'a' AS f1 FROM t1 WHERE a='8' GROUP BY f1 ORDER BY CONCAT(f1);
DROP TABLE t1;
