# Regression tests for comparison operators (=, <>, <, >=, >, <=)
#
# Integer columns, boundary checks
#
CREATE TABLE t1
(pk INTEGER,
 i1 TINYINT,
 u1 SMALLINT,
 i2 SMALLINT,
 u2 INT,
 i3 INT,
 u3 INT,
 i4 INTEGER,
 u4 BIGINT,
 i8 BIGINT,
 u8 LARGEINT)
 UNIQUE KEY(`pk`)
   DISTRIBUTED BY HASH(pk) BUCKETS 1
   PROPERTIES (
       "replication_num" = "1"
   );

INSERT INTO t1 VALUES
(0, -128, 0, -32768, 0, -8388608, 0, -2147483648, 0, -9223372036854775808, 0),
(1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0),
(2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
(3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
(4, 127, 255, 32767, 65535, 8388607, 16777215, 2147483647, 4294967295,
 9223372036854775807, 18446744073709551615);

let $prep_query1=
SELECT i1 = ? AS a,
       u1 = ? AS au,
       i2 = ? AS b,
       u2 = ? AS bu,
       i3 = ? AS c,
       u3 = ? AS cu,
       i4 = ? AS d,
       u4 = ? AS du,
       i8 = ? AS e,
       u8 = ? AS eu
FROM t1;

let $prep_query2=
SELECT i1 <> ? AS a,
       u1 <> ? AS au,
       i2 <> ? AS b,
       u2 <> ? AS bu,
       i3 <> ? AS c,
       u3 <> ? AS cu,
       i4 <> ? AS d,
       u4 <> ? AS du,
       i8 <> ? AS e,
       u8 <> ? AS eu
FROM t1;

let $prep_query3=
SELECT i1 < ? AS a,
       u1 < ? AS au,
       i2 < ? AS b,
       u2 < ? AS bu,
       i3 < ? AS c,
       u3 < ? AS cu,
       i4 < ? AS d,
       u4 < ? AS du,
       i8 < ? AS e,
       u8 < ? AS eu
FROM t1;

let $prep_query4=
SELECT i1 >= ? AS a,
       u1 >= ? AS au,
       i2 >= ? AS b,
       u2 >= ? AS bu,
       i3 >= ? AS c,
       u3 >= ? AS cu,
       i4 >= ? AS d,
       u4 >= ? AS du,
       i8 >= ? AS e,
       u8 >= ? AS eu
FROM t1;

let $prep_query5=
SELECT i1 <= ? AS a,
       u1 <= ? AS au,
       i2 <= ? AS b,
       u2 <= ? AS bu,
       i3 <= ? AS c,
       u3 <= ? AS cu,
       i4 <= ? AS d,
       u4 <= ? AS du,
       i8 <= ? AS e,
       u8 <= ? AS eu
FROM t1;

let $prep_query6=
SELECT i1 > ? AS a,
       u1 > ? AS au,
       i2 > ? AS b,
       u2 > ? AS bu,
       i3 > ? AS c,
       u3 > ? AS cu,
       i4 > ? AS d,
       u4 > ? AS du,
       i8 > ? AS e,
       u8 > ? AS eu
FROM t1;

let $i=0;
while ($i < 19)
{
  if ($i == 0)
  {
    let $value= -9223372036854775809;
  }
  if ($i == 1)
  {
    let $value= -9223372036854775808;
  }
  if ($i == 2)
  {
    let $value= -2147483648;
  }
  if ($i == 3)
  {
    let $value= -8388608;
  }
  if ($i == 4)
  {
    let $value= -32768;
  }
  if ($i == 5)
  {
    let $value= -128;
  }
  if ($i == 6)
  {
    let $value= 0;
  }
  if ($i == 7)
  {
    let $value= 127;
  }
  if ($i == 8)
  {
    let $value= 255;
  }
  if ($i == 9)
  {
    let $value= 32767;
  }
  if ($i == 10)
  {
    let $value= 65535;
  }
  if ($i == 11)
  {
    let $value= 8388607;
  }
  if ($i == 12)
  {
    let $value= 16777215;
  }
  if ($i == 13)
  {
    let $value= 2147483647;
  }
  if ($i == 14)
  {
    let $value= 4294967295;
  }
  if ($i == 15)
  {
    let $value= 9223372036854775807;
  }
  if ($i == 16)
  {
    let $value= 9223372036854775808;
  }
  if ($i == 17)
  {
    let $value= 18446744073709551615;
  }
  if ($i == 18)
  {
    let $value= 18446744073709551616;
  }
  let $d_value=$value.0;
  let $f_value=$value.0e0;
  let $s_value='$value';

  inc $i;
}

DROP TABLE t1;
#
# Float columns, boundary checks
#
CREATE TABLE t2
(pk INTEGER,
 f4 FLOAT,
 f8 DOUBLE)
 UNIQUE KEY(`pk`)
   DISTRIBUTED BY HASH(pk) BUCKETS 1
   PROPERTIES (
       "replication_num" = "1"
   );

INSERT INTO t2 VALUES
(0, -3.402823e+38, -1.797693134862315708e+308),
(1, -1.175494e-38, -2.225073858507201383e-308),
(2, 0, 0),
(3, 1.175494e-38, 2.225073858507201383e-308),
(4, 3.402823e+38, 1.797693134862315708e+308);

let $prep_query1=
SELECT f4 = ? AS a,
       f8 = ? AS b
FROM t2;

let $prep_query2=
SELECT f4 <> ? AS a,
       f8 <> ? AS b
FROM t2;

let $prep_query3=
SELECT f4 < ? AS a,
       f8 < ? AS b
FROM t2;

let $prep_query4=
SELECT f4 >= ? AS a,
       f8 >= ? AS b
FROM t2;

let $prep_query5=
SELECT f4 <= ? AS a,
       f8 <= ? AS b
FROM t2;

let $prep_query6=
SELECT f4 > ? AS a,
       f8 > ? AS b
FROM t2;

let $i=0;
while ($i < 9)
{
  if ($i == 0)
  {
    let $value= -1.797693134862315708e+308;
  }
  if ($i == 1)
  {
    let $value= -3.40282347e+38;
  }
  if ($i == 2)
  {
    let $value= -1.17549435e-38;
  }
  if ($i == 3)
  {
    let $value= -2.225073858507201383e-308;
  }
  if ($i == 4)
  {
    let $value= 0;
  }
  if ($i == 5)
  {
    let $value= 2.225073858507201383e-308;
  }
  if ($i == 6)
  {
    let $value= 1.17549435e-38;
  }
  if ($i == 7)
  {
    let $value= 3.40282347e+38;
  }
  if ($i == 8)
  {
    let $value= 1.797693134862315708e+308;
  }
  let $s_value='$value';

  let $query=
  SELECT f4 = $value AS a,
         f8 = $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 = $s_value AS a,
         f8 = $s_value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 <> $value AS a,
         f8 <> $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 <> $s_value AS a,
         f8 <> $s_value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 < $value AS a,
         f8 < $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 < $s_value AS a,
         f8 < $s_value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 >= $value AS a,
         f8 >= $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 >= $s_value AS a,
         f8 >= $s_value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 <= $value AS a,
         f8 <= $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 <= $s_value AS a,
         f8 <= $s_value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 > $value AS a,
         f8 > $value AS b
  FROM t2;
  eval $query;

  let $query=
  SELECT f4 > $s_value AS a,
         f8 > $s_value AS b
  FROM t2;
  eval $query;

  inc $i;
}

DROP TABLE t2;

#
# Character columns, boundary checks
#
CREATE TABLE t4
(pk INTEGER,
 fc CHAR(12),
 vc VARCHAR(12))
 UNIQUE KEY(`pk`)
   DISTRIBUTED BY HASH(pk) BUCKETS 1
   PROPERTIES (
       "replication_num" = "1"
   );

INSERT INTO t4 VALUES
(0, "", "");

let $prep_query1=
SELECT fc = ? AS a,
       vc = ? AS b
FROM t4;

let $prep_query2=
SELECT fc <> ? AS a,
       vc <> ? AS b
FROM t4;

let $prep_query3=
SELECT fc < ? AS a,
       vc < ? AS b
FROM t4;

let $prep_query4=
SELECT fc >= ? AS a,
       vc >= ? AS b
FROM t4;

let $prep_query5=
SELECT fc <= ? AS a,
       vc <= ? AS b
FROM t4;

let $prep_query6=
SELECT fc > ? AS a,
       vc > ? AS b
FROM t4;

let $i=0;
while ($i < 1)
{
  if ($i == 0)
  {
    let $value= "";
  }

  let $query=
  SELECT fc = $value AS a,
         vc = $value AS b
  FROM t4;
  eval $query;


  let $query=
  SELECT fc <> $value AS a,
         vc <> $value AS b
  FROM t4;
  eval $query;


  let $query=
  SELECT fc < $value AS a,
         vc < $value AS b
  FROM t4;
  eval $query;


  let $query=
  SELECT fc >= $value AS a,
         vc >= $value AS b
  FROM t4;
  eval $query;


  let $query=
  SELECT fc <= $value AS a,
         vc <= $value AS b
  FROM t4;
  eval $query;


  let $query=
  SELECT fc > $value AS a,
         vc > $value AS b
  FROM t4;
  eval $query;

  inc $i;
}

DROP TABLE t4;
#
# Date columns, boundary checks
#
CREATE TABLE t5
(pk INTEGER,
 d DATE)
  UNIQUE KEY(`pk`)
    DISTRIBUTED BY HASH(pk) BUCKETS 1
    PROPERTIES (
        "replication_num" = "1"
    );

INSERT INTO t5 VALUES
(0, '0001-01-01'), (1, '2017-01-01'), (2, '9999-12-31');

let $prep_query1=
SELECT d = ? AS a
FROM t5;

let $prep_query2=
SELECT d <> ? AS a
FROM t5;

let $prep_query3=
SELECT d < ? AS a
FROM t5;

let $prep_query4=
SELECT d >= ? AS a
FROM t5;

let $prep_query5=
SELECT d <= ? AS a
FROM t5;

let $prep_query6=
SELECT d > ? AS a
FROM t5;

let $i=0;
while ($i < 3)
{
  if ($i == 0)
  {
    let $d_value= 0001-01-01;
    let $i_value= 00010101;
  }
  if ($i == 1)
  {
    let $d_value= 2017-01-01;
    let $i_value= 20170101;
  }
  if ($i == 2)
  {
    let $d_value= 9999-12-31;
    let $i_value= 99991231;
  }
  let s_value= '$d_value';
  let time_suffix=000000.0;
  let ts_temp= $d_value 00:00:00.000000;
  let ts_num= $i_value$time_suffix;
  let ts_value= '$ts_temp';

  let $query=
  SELECT d = $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d = $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d = $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d = $ts_num AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <> $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <> $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <> $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <> $ts_num AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d < $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d < $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d < $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d < $ts_num AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d >= $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d >= $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d >= $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d >= $ts_num AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <= $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <= $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <= $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d <= $ts_num AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d > $s_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d > $i_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d > $ts_value AS a
  FROM t5;
  eval $query;

  let $query=
  SELECT d > $ts_num AS a
  FROM t5;
  eval $query;

  inc $i;
}

# Verify that an invalid date leads to a warning

DROP TABLE t5;

#
# Datetime columns, boundary checks
#
CREATE TABLE t7
(pk INTEGER,
 dt1 DATETIME(0),
 dt2 DATETIME(6))
  UNIQUE KEY(`pk`)
    DISTRIBUTED BY HASH(pk) BUCKETS 1
    PROPERTIES (
        "replication_num" = "1"
    );


INSERT INTO t7 VALUES
(0, '0001-01-01 00:00:00', '0001-01-01 00:00:00.000000'),
(1, '2017-01-01 11:59.59', '2017-01-01 11:59.59.555555'),
(2, '9999-12-31 23:59.59', '9999-12-31 23:59.59.999999');

let $prep_query1=
SELECT dt1 = ? AS a,
       dt2 = ? AS b
FROM t7;

let $prep_query2=
SELECT dt1 <> ? AS a,
       dt2 <> ? AS b
FROM t7;

let $prep_query3=
SELECT dt1 < ? AS a,
       dt2 < ? AS b
FROM t7;

let $prep_query4=
SELECT dt1 >= ? AS a,
       dt2 >= ? AS b
FROM t7;

let $prep_query5=
SELECT dt1 <= ? AS a,
       dt2 <= ? AS b
FROM t7;

let $prep_query6=
SELECT dt1 > ? AS a,
       dt2 > ? AS b
FROM t7;

let $i=0;
while ($i < 5)
{
  if ($i == 0)
  {
    let $d_value= 0001-01-01;
    let $ts_value= 0001-01-01 00:00:00.000000;
    let $i_value= 00010101;
    let $dc_value= 00010101000000.000000;
  }
  if ($i == 1)
  {
    let $d_value= 2017-01-01;
    let $ts_value= 2017-01-01 11:59:59;
    let $i_value= 20170101;
    let $dc_value= 20170101115959;
  }
  if ($i == 2)
  {
    let $d_value= 2017-01-01;
    let $ts_value= 2017-01-01 11:59:59.555555;
    let $i_value= 20170101;
    let $dc_value= 20170101115959.555555;
  }
  ##todo WL#6570 i==3 and i==4 seem to do the same?
  if ($i == 3)
  {
    let $d_value= 9999-12-31;
    let $ts_value= 9999-12-31 23:59:59.999999;
    let $i_value= 99991231;
    let $dc_value= 99991231235959.999999;
  }
  if ($i == 4)
  {
    let $d_value= 9999-12-31;
    let $ts_value= 9999-12-31 23:59:59.999999;
    let $i_value= 99991231;
    let $dc_value= 99991231235959.999999;
  }
  let ds_value= '$d_value';
  let tss_value= '$ts_value';
  let $query=
  SELECT dt1 = $ds_value AS a,
         dt2 = $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 = $i_value AS a,
         dt2 = $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 = $tss_value AS a,
         dt2 = $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 = $dc_value AS a,
         dt2 = $dc_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <> $ds_value AS a,
         dt2 <> $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <> $i_value AS a,
         dt2 <> $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <> $tss_value AS a,
         dt2 <> $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <> $dc_value AS a,
         dt2 <> $dc_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 < $ds_value AS a,
         dt2 < $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 < $i_value AS a,
         dt2 < $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 < $tss_value AS a,
         dt2 < $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 < $dc_value AS a,
         dt2 < $dc_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 >= $ds_value AS a,
         dt2 >= $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 >= $i_value AS a,
         dt2 >= $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 >= $tss_value AS a,
         dt2 >= $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 >= $dc_value AS a,
         dt2 >= $dc_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <= $ds_value AS a,
         dt2 <= $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <= $i_value AS a,
         dt2 <= $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <= $tss_value AS a,
         dt2 <= $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 <= $dc_value AS a,
         dt2 <= $dc_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 > $ds_value AS a,
         dt2 > $ds_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 > $i_value AS a,
         dt2 > $i_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 > $tss_value AS a,
         dt2 > $tss_value AS b
  FROM t7;
  eval $query;

  let $query=
  SELECT dt1 > $dc_value AS a,
         dt2 > $dc_value AS b
  FROM t7;
  eval $query;

  inc $i;
}

DROP TABLE t7;
